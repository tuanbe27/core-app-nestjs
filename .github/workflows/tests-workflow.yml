name: tests

on:
  pull_request:
    branches: [master]

jobs:
  test_pull_request:
    runs-on: ubuntu-latest
    env:
      APP_ENV: test
      APP_PORT: 3000
      JWT_ACCESS_TOKEN_EXP_IN_SEC: 3600
      JWT_REFRESH_TOKEN_EXP_IN_SEC: 7200
      JWT_PUBLIC_KEY_BASE64: ${{ secrets.JWT_PUBLIC_KEY_BASE64 }}
      JWT_PRIVATE_KEY_BASE64: ${{ secrets.JWT_PRIVATE_KEY_BASE64 }}
      DEFAULT_ADMIN_USER_PASSWORD: example_admin_pass

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: yarn add ci
      - name: Run unit tests
        run: yarn test
      - name: Build the docker-compose stack
        run: docker-compose -f docker-compose.yml up -d mysqldb
      - name: Check running containers
        run: docker ps -a
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with: 
        host-port: 3800 # Optional, default value is 3306. The port of host
          container-port: 3307 # Optional, default value is 3306. The port of container
          character-set-server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation-server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option formysqld
          mysql-version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql-database: 'some_test' # Optional, default value is "test". The specified database which will be create
          mysql-root-password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuserpassword
          mysql-user: 'test ' # Required if "mysql root password" is empty, default is empty. The superuser for the specifieddatabase.         Can use secrets, too
          mysql-password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
      - name: Run e2e tests
        run: sleep 5 && yarn test:e2e
